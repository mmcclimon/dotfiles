(provide 'mjm/colors)
(setq lexical-binding t)

(use-package gruvbox-theme :ensure t)

(defun load-gruvbox ()
  (interactive)
  (mapcar #'disable-theme custom-enabled-themes)    ; clear old theme out
  (load-theme 'gruvbox t)
  (custom-theme-set-faces                           ; patch this one
   'gruvbox

   ;; font-lock faces
   ; '(font-lock-comment-face ((t (:foreground "#b0b0b0"))))
   ; '(font-lock-constant-face ((t (:foreground "#90a959"))))
   ; '(font-lock-function-name-face ((t (:foreground "#6a9fb5"))))
   ; '(font-lock-keyword-face ((t (:foreground "#aa759f"))))
   ; '(font-lock-string-face ((t (:foreground "#90a959"))))
   ; '(font-lock-type-face ((t (:foreground "#f4bf75"))))
   ; '(font-lock-variable-name-face ((t (:foreground "#ac4142"))))
   ; '(font-lock-warning-face ((t (:foreground "#ac4142"))))

   ;; everything else
   '(cperl-hash-face ((t (:inherit font-lock-variable-name-face))))
   '(cperl-array-face ((t (:inherit font-lock-variable-name-face))))
   '(cperl-nonoverridable-face ((t (:inherit font-lock-keyword-face))))
   '(flyspell-duplicate ((t (:underline (:color "chartreuse4" :style wave)))))
   '(flyspell-incorrect ((t (:underline (:color "red" :style wave)))))
   '(font-latex-italic-face ((t (:inherit italic))))
   '(font-latex-sectioning-5-face ((t (:inherit font-lock-variable-name-face :weight bold))))
   '(font-latex-sedate-face ((t (:foreground "#8899aa"))))
   '(font-latex-string-face ((t (:inherit font-lock-doc-string-face))))
   '(font-latex-subscript-face ((t nil)))
   ; '(fringe ((t (:background "#202020"))))
   '(ido-subdir ((t (:foreground "DarkSeaGreen4"))))
   '(ido-subdir ((t (:foreground "DarkSeaGreen4"))))
   ; '(ledger-font-auto-xact-face ((t (:inherit font-lock-type-face :weight normal))))
   ; '(ledger-font-payee-cleared-face ((t (:inherit ledger-font-posting-date-face))))
   ; '(ledger-font-payee-uncleared-face ((t (:inherit font-lock-warning-face :weight bold))))
   ; '(ledger-font-pending-face ((t (:inherit ledger-font-payee-uncleared-face :weight bold))))
   ; '(ledger-font-posting-account-face ((t (:inherit font-lock-function-name-face))))
   ; '(ledger-font-posting-amount-face ((t (:inherit font-lock-keyword-face))))
   ; '(ledger-font-posting-date-face ((t (:inherit font-lock-constant-face))))
   ; '(ledger-occur-xact-face ((t nil)))
   '(link ((t (:inherit font-lock-function-name-face :underline t))))
   '(link ((t (:inherit font-lock-function-name-face :underline t))))
   '(link-visited ((t (:inherit font-lock-keyword-face :underline t))))
   '(link-visited ((t (:inherit font-lock-keyword-face :underline t))))
   ; '(linum ((t (:background "#202020" :foreground "#707070" :height 0.9))))
   '(linum ((t (:background "#202020" :foreground "#505050" :height 0.9))))
   '(markdown-italic-face ((t (:slant italic))))
   '(minibuffer-prompt ((t (:foreground "#6a9fb5"))))
   '(mode-line ((t (:background "#303030" :foreground "#b0b0b0"))))
   '(mode-line-inactive ((t (:inherit mode-line :background "#202020" :foreground "#505050" :weight light))))
   '(neo-button-face ((t (:inherit link :underline nil))))
   '(org-date ((t (:foreground "#aa759f"))))
   '(org-done ((t (:foreground "#90a959"))))
   '(org-hide ((t (:foreground "#505050"))))
   '(org-link ((t (:foreground "#6a9fb5"))))
   '(org-todo ((t (:foreground "#ac4142"))))
   '(region ((t (:background "#b0b0b0"))))
   '(show-paren-match ((t (:background "#6a9fb5" :foreground "#505050"))))
   '(show-paren-mismatch ((t (:background "#d28445" :foreground "#505050"))))
   '(TeX-fold-folded-face ((t (:foreground "DarkSlateGray4"))))
   '(variable-pitch ((t (:weight light :height 1.3 :family "Source Sans Pro"))))
   '(variable-pitch ((t (:weight light :height 1.3 :family "Source Sans Pro"))))
   '(web-mode-html-entity-face ((t (:inherit font-lock-comment-face))))
   '(whitespace-newline ((t (:foreground "dimgray" :weight normal))))
   '(whitespace-newline ((t (:foreground "dimgray" :weight normal))))
   '(whitespace-space ((t (:foreground "dimgray"))))
   '(whitespace-space ((t (:foreground "dimgray"))))
   '(whitespace-tab ((t (:foreground "dim gray"))))
   '(whitespace-tab ((t (:foreground "dim gray"))))))

(load-gruvbox)
