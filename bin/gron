#!/usr/bin/env python
import json
import re
import sys


def dispatch(data, path):
    if isinstance(data, list):
        return do_list(data, path)
    if isinstance(data, dict):
        return do_dict(data, path)
    return do_value(data, path)


def do_list(data: list, path: str):
    print(f"{path} = [];")
    for i, item in enumerate(data):
        dispatch(item, f"{path}[{i}]")


def do_dict(data: dict, path: str):
    print(f"{path} = {{}};")
    for k in sorted(data.keys()):
        suffix = f'["{k}"]'
        if re.match(r"[_a-z$][a-z0-9_]*$", k):
            suffix = f".{k}"

        dispatch(data[k], f"{path}{suffix}")


def do_value(data, path: str):
    if isinstance(data, bool):
        s = "true" if data else "false"
    elif data is None:
        s = "null"
    elif isinstance(data, int) or isinstance(data, float):
        s = data
    elif isinstance(data, str):
        s = json.dumps(data)
    else:
        raise ValueError(f"bad data: {data}")

    print(f"{path} = {s};")


if __name__ == "__main__":
    match len(sys.argv):
        case 1:
            file = sys.stdin
        case 2:
            filename = sys.argv[1]
            file = sys.stdin if filename == "-" else open(filename)
        case _:
            print("bad input: need exactly 0 or 1 filenames")
            sys.exit(1)

    data = json.load(file)
    file.close()
    dispatch(data, 'json')
