#!/usr/bin/env python
import argparse
import subprocess

# this program is only for me; I always have my git name set correctly, and I
# have an uncommon enough last name that this will just work.
LOG_ARGS = ["--author", "McClimon"]


def main(limit: int):
    counts = build_commits()
    commits = sorted(counts.keys(), key=lambda k: counts[k], reverse=True)

    for i, c in enumerate(commits):
        if i >= args.limit:
            break

        subprocess.run(["git", "--no-pager", "show", "--stat", c])
        print("")


def build_commits() -> dict[str, int]:
    counts = {}
    format = "--START-- %H%n%B--END--"

    with subprocess.Popen(
        ["git", "log", f"--format={format}", *LOG_ARGS],
        stdout=subprocess.PIPE,
        encoding="utf-8",
    ) as git:
        assert git.stdout is not None
        commit = ""
        line_count = 0

        for line in git.stdout:
            if line.startswith("--START--"):
                commit = line.removeprefix("--START-- ").rstrip()
                line_count = 0

            if line.rstrip() == "--END--":
                counts[commit] = line_count
                continue

            line_count += 1

    return counts


if __name__ == "__main__":
    ap = argparse.ArgumentParser(
        prog="git-wordy-commits",
        description="long commit messages are good actually",
    )

    ap.add_argument(
        "--limit", "-n",  # yeah, I know.
        type=int,
        default=5,
        help="number to use",
    )

    args = ap.parse_args()
    main(limit=args.limit)
