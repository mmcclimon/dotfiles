" vim:fdm=marker

" General -----------------------------------------------------{{{
set nocompatible
" make sure functions are loaded
execute pathogen#infect()
" }}}

" Text Editing ------------------------------------------------{{{
set backspace=indent,eol,start
filetype plugin indent on
set autoindent
set smartindent
set tabstop=4
set shiftwidth=4
set expandtab

augroup prewrite
    au!
    au BufWritePre * :FixWhitespace
augroup END
" }}}

" Backups -----------------------------------------------------{{{
if has("vms")
  set nobackup		" do not keep a backup file, use versions instead
else
  set backup		" keep a backup file
endif
set backupdir=~/.vim/backup
" }}}

" UI ----------------------------------------------------------{{{
set history=50		" keep 50 lines of command line history
set ruler		    " show the cursor position all the time
set showcmd		    " display incomplete commands
set incsearch		" do incremental searching
set smartcase
set number

if has('mouse')
  set mouse=a
endif

if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

function! SyntaxItem()
	return synIDattr(synID(line("."),col("."),1),"name")
endfunction

set statusline=%<%f\ %h%m%r\ %{SyntaxItem()}%=%-14.(%l,%c%V%)\ %P
" }}}

" Folding -----------------------------------------------------{{{
set nofoldenable
set foldlevel=10
augroup folding
    au!
	au BufReadPre * setlocal foldmethod=indent
	au BufWinEnter * if &fdm == 'indent' | setlocal foldmethod=manual | endif
augroup END
" }}}

" Global mappings ---------------------------------------------{{{
let mapleader=","
nnoremap <silent> <leader>s :nohls<CR>
" }}}

" Plugins -----------------------------------------------------{{{
" NERDTree ----------------------------------------------------{{{
nnoremap <F5> :NERDTreeToggle<CR>
" }}}

" MiniBufExplorer ---------------------------------------------{{{
if has("gui_running")
    let g:miniBufExplorerMoreThanOne=0
endif

hi link MBEVisibleChangedActive Statement
hi link MBEVisibleNormal Normal
hi link MBEVisibleChanged Underlined
" }}}
" }}}

" Misc. Filetypes ---------------------------------------------{{{
au BufEnter /private/tmp/crontab.* setl backupcopy=yes

" }}}

" Org mode ----------------------------------------------------{{{
augroup org_mode
    au!
    au BufEnter *.org set ft=org
augroup END
" }}}
