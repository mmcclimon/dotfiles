" new and improved .vimrc

set nocompatible

" load plugins
execute pathogen#infect()

filetype plugin indent on

" Text Editing {{{
" ----------------
set backspace=indent,eol,start  " backspace works over everything
set autoindent                  " use previous line's indent
set smartindent                 " indent braces automatically
set expandtab                   " what am i, an animal? use spaces
set tabstop=4                   " four spaces
set shiftwidth=4
set textwidth=78                " 78 works nicely for wrapping
set encoding=utf-8              " unicode
" }}}

" UI {{{
" ------
set history=50                  " keep 50 lines of command line history
set ruler                       " show the cursor position all the time
set showcmd                     " display incomplete commands
set incsearch                   " do incremental searching
set ignorecase                  " ignore case, but...
set smartcase                   " only if pattern is all lowercase
set laststatus=2                " always show status line
" set number                      " always show line nums
set hidden                      " allow hidden buffers
set wildmenu                    " better tab completion
set splitright                  " vertical splits open to right
set mouse=a                     " turn on mouse
set scrolloff=3
set modelines=2
set scrolloff=3
set wildmode=longest:full,longest
set wildignore+=.git,.svn,local,build,vendor,.sass-cache
set list listchars=tab:>-,trail:~,extends:>,precedes:<

function! SyntaxItem()
    return synIDattr(synID(line("."),col("."),1),"name")
endfunction

function! GitStatusLine(...) abort
  if !exists('b:git_dir')
    return ''
  endif
  let status = fugitive#head(7)
  return '(git:'.status.')'
endfunction

set statusline=%<%f\ %h%m%r\ %{GitStatusLine()}\ %{SyntaxItem()}%=%-14.(%l,%c%V%)\ %P

" Folding
set foldlevelstart=99           " all folds start open
set foldopen-=block             " jump over folds as if they're lines
augroup folding
    au!
    au BufReadPre * setlocal foldmethod=indent
    au BufWinEnter * if &fdm == 'indent' | setlocal foldmethod=manual | endif
augroup END

" Colors
set background=dark
colorscheme gruvbox

if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

if has("termguicolors")
    set termguicolors
    " colorscheme solarized8_dark
    " let g:gruvbox_italic=1
    colorscheme gruvbox
endif

" be annoying about extra whitespace
augroup trailing
    au!
    au InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
    au InsertEnter * set listchars-=trail:~
    au InsertLeave * match ExtraWhitespace /\s\+$/
    au InsertLeave * set listchars+=trail:~
augroup END
highlight ExtraWhitespace ctermbg=red guibg=red

" }}}

" Mappings ----------------------------------------------------{{{
let mapleader=","
let maplocalleader = '\\'
nnoremap <silent> <leader>s :nohls<CR>
nnoremap q: <Nop>

if (v:progname == "view")
    nnoremap d <PageDown>
    nnoremap u <PageUp>
    nnoremap q :q<CR>
    nunmap q:
    set nonumber nolist
endif

" better window motion
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" switch colon and semicolon
nnoremap ; :
nnoremap : ;
inoremap <c-c> <esc>
" Uppercase last word in insert mode (stolen from Steve Losh).
inoremap <C-u> <esc>mzgUiw`za
" }}}

" Misc. settings {{{
" ------------------

" backups
set backup                      " keep a backup file
set backupdir=~/.vim/backup     " might as well keep them here
set autowrite                   " save things automatically

let g:tex_flavor = "latex"      " plaintex is no good
let perl_sub_signatures = 1     " newish perl!

let perl_sub_signatures = 1     " new perls!

" fix crontab bug
au BufEnter /private/tmp/crontab.* setl backupcopy=yes
au FileType gitcommit setl tw=72


" }}}

" Imports {{{
" -----------
so ~/.vim/functions.vim   " load custom functions
so ~/.vim/plugins.vim     " load plugin settings
so ~/.vim/abbrevs.vim     " I can't type
so ~/.vim/colors.vim      " for patching
" }}}
" vim:fdm=marker
" vim:set filetype=vim
